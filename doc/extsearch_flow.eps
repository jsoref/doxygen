%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.18.4 (http://poppler.freedesktop.org)
%%Creator: cairo 1.10.2 (http://cairographics.org)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 176 542
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CairoFont-0-0
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.06
%%Title: NimbusSanL-Regu
%Version: 1.06
%%CreationDate: Thu Aug  2 14:35:58 2007
%%Creator: frob
%Copyright: Copyright (URW)++,Copyright 1999 by (URW)++ Design &
%Copyright:  Development; Cyrillic glyphs added by Valek Filippov (C)
%Copyright:  2001-2005
% Generated by FontForge 20070723 (http://fontforge.sf.net/)
%%EndComments

FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known pop false {dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CairoFont-0-0 def
/FontBBox {-174 -285 1022 953 }readonly def
                     
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (1.06) readonly def
 /Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development; Cyrillic glyphs added by Valek Filippov \050C\051 2001-2005) readonly def
 /FullName (Nimbus Sans L Regular) readonly def
 /FamilyName (Nimbus Sans L) readonly def
 /Weight (Regular) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -151 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 17 /space put
dup 14 /period put
dup 21 /H put
dup 24 /L put
dup 23 /M put
dup 22 /T put
dup 9 /a put
dup 20 /b put
dup 11 /c put
dup 1 /d put
dup 6 /e put
dup 5 /g put
dup 12 /h put
dup 19 /i put
dup 16 /l put
dup 15 /m put
dup 7 /n put
dup 2 /o put
dup 25 /p put
dup 27 /q put
dup 10 /r put
dup 8 /s put
dup 13 /t put
dup 26 /u put
dup 18 /w put
dup 3 /x put
dup 4 /y put
readonly def
currentdict end
currentfile eexec
cleartomark
{restore}if

%%EndResource
/F5_0 /CairoFont-0-0 1 1
[ /.notdef/d/o/x/y/g/e/n
  /s/a/r/c/h/t/period/m
  /l/space/w/i/b/H/T/M
  /L/p/u/q/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
36 35 105 471 re
W
/DeviceRGB {} cs
[1 1 1] sc
/DeviceRGB {} CS
[1 1 1] SC
1 w
0 J
1 j
[] 0 d
10 M
36 35 105 471 re
f
36 35 105 471 re
S
/DeviceRGB {} CS
[0 0 0] SC
119.301 484 m
119.301 474.059 105.285 466 88 466 c
70.715 466 56.699 474.059 56.699 484 c
56.699 493.941 70.715 502 88 502 c
105.285 502 119.301 493.941 119.301 484 c
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 69.5 481.5] Tm
0 0 Td
/F5_0 1 Tf
(\001) 0.556 Tj
31 TJm
(\002) 0.556 Tj
31 TJm
(\003) 0.5 Tj
-25 TJm
(\004) 0.5 Tj
-25 TJm
(\005) 0.556 Tj
31 TJm
(\006) 0.556 Tj
31 TJm
(\007) 0.556 Tj
/DeviceRGB {} CS
[0 0 0] SC
123.25 418 m
46.75 418 l
46.75 382 l
129.25 382 l
129.25 412 l
123.25 418 l
h
S
123.25 418 m
123.25 412 l
S
129.25 412 m
123.25 412 l
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 54.5 397.5] Tm
0 0 Td
/F5_0 1 Tf
(\010) 0.5 Tj
-25 TJm
(\006) 0.556 Tj
31 TJm
(\011) 0.556 Tj
31 TJm
(\012) 0.333 Tj
33 TJm
(\013) 0.5 Tj
-25 TJm
(\014) 0.556 Tj
31 TJm
(\001) 0.556 Tj
31 TJm
(\011) 0.556 Tj
31 TJm
(\015) 0.278 Tj
-22 TJm
(\011) 0.556 Tj
31 TJm
(\016) 0.278 Tj
-23 TJm
(\003) 0.5 Tj
-25 TJm
(\017) 0.832 Tj
8 TJm
(\020) 0.222 Tj
/DeviceRGB {} CS
[0 0 0] SC
88 465.609 m
88 454.773 88 440.602 88 428.293 c
S
/DeviceRGB {} cs
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
91.5 428.082 m
88 418.082 l
84.5 428.082 l
91.5 428.082 l
h
f
91.5 428.082 m
88 418.082 l
84.5 428.082 l
91.5 428.082 l
h
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 88 439.5] Tm
0 0 Td
/F5_0 1 Tf
(\021) 0.278 Tj
-22 TJm
(\022) 0.721 Tj
-28 TJm
(\012) 0.333 Tj
33 TJm
(\023) 0.222 Tj
-3 TJm
(\015) 0.278 Tj
-22 TJm
(\006) 0.556 Tj
31 TJm
(\010) 0.5 Tj
/DeviceRGB {} CS
[0 0 0] SC
128.426 316 m
128.426 306.059 110.328 298 88 298 c
65.672 298 47.574 306.059 47.574 316 c
47.574 325.941 65.672 334 88 334 c
110.328 334 128.426 325.941 128.426 316 c
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 61.5 313.5] Tm
0 0 Td
/F5_0 1 Tf
(\001) 0.556 Tj
31 TJm
(\002) 0.556 Tj
31 TJm
(\003) 0.5 Tj
-25 TJm
(\004) 0.5 Tj
-25 TJm
(\023) 0.222 Tj
-3 TJm
(\007) 0.556 Tj
31 TJm
(\001) 0.556 Tj
31 TJm
(\006) 0.556 Tj
31 TJm
(\003) 0.5 Tj
-25 TJm
(\006) 0.556 Tj
30 TJm
(\012) 0.333 Tj
/DeviceRGB {} CS
[0 0 0] SC
122 250 m
48 250 l
48 214 l
128 214 l
128 244 l
122 250 l
h
S
122 250 m
122 244 l
S
128 244 m
122 244 l
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 56 229.5] Tm
0 0 Td
/F5_0 1 Tf
(\001) 0.556 Tj
31 TJm
(\002) 0.556 Tj
31 TJm
(\003) 0.5 Tj
-25 TJm
(\004) 0.5 Tj
-25 TJm
(\010) 0.5 Tj
-25 TJm
(\006) 0.556 Tj
31 TJm
(\011) 0.556 Tj
31 TJm
(\012) 0.333 Tj
33 TJm
(\013) 0.5 Tj
-25 TJm
(\014) 0.556 Tj
31 TJm
(\016) 0.278 Tj
-23 TJm
(\001) 0.556 Tj
31 TJm
(\024) 0.556 Tj
/DeviceRGB {} CS
[0 0 0] SC
88 297.609 m
88 286.773 88 272.602 88 260.293 c
S
/DeviceRGB {} cs
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
91.5 260.082 m
88 250.082 l
84.5 260.082 l
91.5 260.082 l
h
f
91.5 260.082 m
88 250.082 l
84.5 260.082 l
91.5 260.082 l
h
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 88 271.5] Tm
0 0 Td
/F5_0 1 Tf
(\021) 0.278 Tj
-22 TJm
(\022) 0.721 Tj
-28 TJm
(\012) 0.333 Tj
33 TJm
(\023) 0.222 Tj
-3 TJm
(\015) 0.278 Tj
-22 TJm
(\006) 0.556 Tj
31 TJm
(\010) 0.5 Tj
/DeviceRGB {} CS
[0 0 0] SC
136.289 148 m
136.289 138.059 114.672 130 88 130 c
61.328 130 39.711 138.059 39.711 148 c
39.711 157.941 61.328 166 88 166 c
114.672 166 136.289 157.941 136.289 148 c
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 54.5 145.5] Tm
0 0 Td
/F5_0 1 Tf
(\001) 0.556 Tj
31 TJm
(\002) 0.556 Tj
31 TJm
(\003) 0.5 Tj
-25 TJm
(\004) 0.5 Tj
-25 TJm
(\010) 0.5 Tj
-25 TJm
(\006) 0.556 Tj
31 TJm
(\011) 0.556 Tj
31 TJm
(\012) 0.333 Tj
33 TJm
(\013) 0.5 Tj
-25 TJm
(\014) 0.556 Tj
31 TJm
(\016) 0.278 Tj
-23 TJm
(\013) 0.5 Tj
-25 TJm
(\005) 0.556 Tj
31 TJm
(\023) 0.222 Tj
/DeviceRGB {} CS
[0 0 0] SC
136.125 61 m
136.125 49.164 114.578 39.57 88 39.57 c
61.422 39.57 39.875 49.164 39.875 61 c
39.875 72.836 61.422 82.43 88 82.43 c
114.578 82.43 136.125 72.836 136.125 61 c
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 62 64] Tm
0 0 Td
/F5_0 1 Tf
(\025) 0.721 Tj
-28 TJm
(\026) 0.61 Tj
11 TJm
(\027) 0.832 Tj
8 TJm
(\030) 0.556 Tj
31 TJm
(\021) 0.278 Tj
-22 TJm
(\031) 0.556 Tj
31 TJm
(\011) 0.556 Tj
31 TJm
(\005) 0.556 Tj
31 TJm
(\006) 0.556 Tj
0.300007 -1.100027 Td
(\023) 0.222 Tj
-3 TJm
(\007) 0.556 Tj
31 TJm
(\021) 0.278 Tj
-22 TJm
(\024) 0.556 Tj
31 TJm
(\012) 0.333 Tj
33 TJm
(\002) 0.556 Tj
31 TJm
(\022) 0.721 Tj
-28 TJm
(\010) 0.5 Tj
-25 TJm
(\006) 0.556 Tj
31 TJm
(\012) 0.333 Tj
/DeviceRGB {} CS
[0 0 0] SC
65.395 131.844 m
55.582 123.238 47.281 111.84 52 100 c
53.711 95.703 56.164 91.617 58.996 87.82 c
S
/DeviceRGB {} cs
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
61.828 89.895 m
65.66 80.02 l
56.504 85.348 l
61.828 89.895 l
h
f
61.828 89.895 m
65.66 80.02 l
56.504 85.348 l
61.828 89.895 l
h
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 52 103.5] Tm
0 0 Td
/F5_0 1 Tf
(\021) 0.278 Tj
-22 TJm
(\005) 0.556 Tj
31 TJm
(\006) 0.556 Tj
31 TJm
(\015) 0.278 Tj
-22 TJm
(\021) 0.278 Tj
-22 TJm
(\012) 0.333 Tj
33 TJm
(\006) 0.556 Tj
31 TJm
(\010) 0.5 Tj
-25 TJm
(\032) 0.556 Tj
31 TJm
(\020) 0.222 Tj
-3 TJm
(\015) 0.278 Tj
-22 TJm
(\010) 0.5 Tj
-25 TJm
(\021) 0.278 Tj
/DeviceRGB {} CS
[0 0 0] SC
99.348 81.715 m
103.281 90.82 106.211 101.848 104 112 c
103.375 114.875 102.488 117.801 101.453 120.668 c
S
/DeviceRGB {} cs
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
98.152 119.488 m
97.508 130.062 l
104.605 122.199 l
98.152 119.488 l
h
f
98.152 119.488 m
97.508 130.062 l
104.605 122.199 l
98.152 119.488 l
h
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 104 103.5] Tm
0 0 Td
/F5_0 1 Tf
(\021) 0.278 Tj
-22 TJm
(\033) 0.556 Tj
31 TJm
(\032) 0.556 Tj
31 TJm
(\006) 0.556 Tj
31 TJm
(\012) 0.333 Tj
33 TJm
(\004) 0.5 Tj
-25 TJm
(\021) 0.278 Tj
/DeviceRGB {} CS
[0 0 0] SC
88 381.609 m
88 370.773 88 356.602 88 344.293 c
S
/DeviceRGB {} cs
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
91.5 344.082 m
88 334.082 l
84.5 344.082 l
91.5 344.082 l
h
f
91.5 344.082 m
88 334.082 l
84.5 344.082 l
91.5 344.082 l
h
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 88 355.5] Tm
0 0 Td
/F5_0 1 Tf
(\021) 0.278 Tj
-22 TJm
(\012) 0.333 Tj
33 TJm
(\006) 0.556 Tj
31 TJm
(\011) 0.556 Tj
31 TJm
(\001) 0.556 Tj
31 TJm
(\010) 0.5 Tj
/DeviceRGB {} CS
[0 0 0] SC
88 213.609 m
88 202.773 88 188.602 88 176.293 c
S
/DeviceRGB {} cs
[0 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
91.5 176.082 m
88 166.082 l
84.5 176.082 l
91.5 176.082 l
h
f
91.5 176.082 m
88 166.082 l
84.5 176.082 l
91.5 176.082 l
h
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[9.999756 0 0 9.999756 88 187.5] Tm
0 0 Td
/F5_0 1 Tf
(\021) 0.278 Tj
-22 TJm
(\012) 0.333 Tj
33 TJm
(\006) 0.556 Tj
31 TJm
(\011) 0.556 Tj
31 TJm
(\001) 0.556 Tj
31 TJm
(\010) 0.5 Tj
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CairoFont-0-0
%%EOF
